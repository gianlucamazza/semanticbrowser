[package]
name = "semanticbrowser"
version = "0.1.3"
edition = "2021"

[lib]
name = "semantic_browser"
path = "src/lib.rs"

[[bin]]
name = "semantic_browser_agent"
path = "src/main.rs"

[[bin]]
name = "semantic_browser_mcp"
path = "src/bin/semantic_browser_mcp.rs"

[[bench]]
name = "parsing_benchmark"
harness = false

[dependencies]
html5ever = "0.26"
scraper = "0.18"
oxigraph = "0.4"
tract-core = "0.21"
tract-onnx = { version = "0.22", optional = true }
tokenizers = { version = "0.20", optional = true }
tokio = { version = "1", features = ["full"] }
axum = { version = "0.7", features = ["macros"] }
pyo3 = { version = "0.27", optional = true }
# TODO: Add pyo3-async-runtimes when version 0.27 is released
# pyo3-async-runtimes = { version = "0.27", optional = true, features = ["tokio"] }
rustls = "0.21"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
sled = "0.34"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
base64 = "0.22"
regex = "1.0"
tower = "0.5"
tower-http = { version = "0.6", features = ["trace", "cors"] }
reqwest = { version = "0.12", features = ["json", "stream", "multipart"] }
jsonwebtoken = "9.3"
thiserror = "1.0"
chrono = { version = "0.4", features = ["serde"] }
libc = "0.2"
async-trait = "0.1"
# Browser automation (2025 best practice: chromiumoxide for headless browsing)
chromiumoxide = { version = "0.7", optional = true }
futures = "0.3"
futures-util = "0.3"  # For stream utilities (bytes_stream, StreamExt)
# Redis for token revocation (optional feature)
redis = { version = "0.27", optional = true, features = ["tokio-comp", "connection-manager"] }
# Observability (2025 best practice: OpenTelemetry + Prometheus)
opentelemetry = { version = "0.27", optional = true }
opentelemetry_sdk = { version = "0.27", optional = true, features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.27", optional = true }
tracing-opentelemetry = { version = "0.28", optional = true }
prometheus = { version = "0.13", optional = true }
lazy_static = "1.4"

[target.'cfg(target_os = "linux")'.dependencies]
seccompiler = { version = "0.5", optional = true }

[dev-dependencies]
criterion = "0.5"
proptest = "1.5"
test-case = "3.3"

[features]
default = []
pyo3-integration = ["pyo3"]  # TODO: Add pyo3-async-runtimes when 0.27 is released
onnx-integration = ["tract-onnx", "tokenizers"]
seccomp = ["seccompiler"]  # Enable seccomp sandboxing on Linux
telemetry = ["opentelemetry", "opentelemetry_sdk", "opentelemetry-otlp", "tracing-opentelemetry"]  # OpenTelemetry observability
observability = ["prometheus"]  # Prometheus metrics
browser-automation = ["chromiumoxide"]  # Headless browser automation with Chromium
redis-integration = ["redis"]  # Redis for token revocation and caching
llm-openai = []  # OpenAI LLM provider integration
llm-anthropic = []  # Anthropic Claude LLM provider integration
