# Semantic Browser Configuration
# Copy this file to .env and customize for your environment
#
# ⚠️ SECURITY WARNING:
# - Never commit .env files to version control
# - Use strong, randomly generated secrets in production
# - Rotate JWT_SECRET periodically
# - Configure firewall rules for API access

# ==============================================================================
# JWT Authentication (REQUIRED)
# ==============================================================================
# Secret key for JWT token signing and verification
# IMPORTANT: Must be at least 32 characters long for security
# Generate a secure random key: openssl rand -base64 48
# NEVER commit this to version control in production!
JWT_SECRET=change-this-to-a-long-random-secret-key-at-least-32-characters-long

# ==============================================================================
# Redis Integration (OPTIONAL)
# ==============================================================================
# Redis URL for token revocation and caching
# Required for token revocation feature (--features redis-integration)
# Format: redis://username:password@host:port/database
# Examples:
# - Local Redis: redis://127.0.0.1:6379
# - With auth: redis://username:password@host:6379/0
# - Redis Cloud: redis://username:password@host:port
# REDIS_URL=redis://127.0.0.1:6379

# ==============================================================================
# Machine Learning Models (OPTIONAL)
# ==============================================================================
# Path to ONNX NER model file
# If not set or file doesn't exist, falls back to regex-based entity extraction
# Requires --features onnx-integration
# NER_MODEL_PATH=./models/ner-model.onnx

# Path to NER tokenizer (required for ONNX NER)
# Should point to Hugging Face tokenizer.json file
# NER_TOKENIZER_PATH=./models/tokenizer.json

# Path to NER labels file (optional)
# File containing BIO labels for entity types
# NER_LABELS_PATH=./models/labels.txt

# NER labels as comma-separated string (alternative to file)
# Example: B-PER,I-PER,B-ORG,I-ORG,B-LOC,I-LOC,O
# NER_LABELS=B-PER,I-PER,B-ORG,I-ORG,B-LOC,I-LOC,O

# Path to Knowledge Graph inference model
# If not set or file doesn't exist, uses rule-based inference
# Requires --features onnx-integration
# KG_INFERENCE_MODEL_PATH=./models/kg-inference-model.onnx

# KG embedding type (TransE, DistMult, ComplEx)
# Default: TransE
# KG_EMBEDDING_TYPE=TransE

# Node name for entity embeddings in ONNX model
# Default: entity_embeddings
# KG_ENTITY_EMBEDDINGS_NODE=entity_embeddings

# Node name for relation embeddings in ONNX model
# Default: relation_embeddings
# KG_RELATION_EMBEDDINGS_NODE=relation_embeddings

# Confidence threshold for ML-based KG inference (0.0-1.0)
# Only predictions above this threshold will be inserted
# Default: 0.7
# KG_INFERENCE_CONFIDENCE_THRESHOLD=0.7

# Number of top predictions to consider per entity pair
# Default: 5
# KG_INFERENCE_TOP_K=5

# Sample size for ML inference (to avoid processing entire KG)
# Default: 100
# KG_INFERENCE_SAMPLE_SIZE=100

# Maximum number of triples to insert from ML predictions
# Safety limit to prevent KG explosion
# Default: 1000
# KG_INFERENCE_MAX_INSERTS=1000

# ==============================================================================
# Knowledge Graph Persistence (OPTIONAL)
# ==============================================================================
# Path for persistent Knowledge Graph storage
# If not set, uses in-memory storage (data lost on restart)
# Path for persistent Knowledge Graph storage
# If not set, uses in-memory storage (data lost on restart)
# Enable for production use, but monitor disk usage
# KG_PERSIST_PATH=./data/kg

# ==============================================================================
# Logging Configuration (OPTIONAL)
# ==============================================================================
# Log level: trace, debug, info, warn, error
# Default: info
# RUST_LOG=info

# More granular logging per module
# RUST_LOG=semantic_browser=debug,semantic_browser::api=trace

# ==============================================================================
# API Server Configuration (OPTIONAL)
# ==============================================================================
# Server bind address and port
# Default: 0.0.0.0:3000
# SERVER_ADDR=0.0.0.0
# SERVER_PORT=3000

# ==============================================================================
# Security Configuration (OPTIONAL)
# ==============================================================================
# Enable strict security mode
# SECURITY_STRICT_MODE=true

# Maximum HTML input size in bytes
# Default: 10_000_000 (10 MB)
# MAX_HTML_SIZE=10000000

# Maximum SPARQL query length
# Default: 10_000
# MAX_QUERY_LENGTH=10000

# ==============================================================================
# Browser Automation (OPTIONAL)
# ==============================================================================
# Headless browser automation with chromiumoxide
# Requires --features browser-automation

# Path to Chromium/Chrome executable
# If not set, will auto-detect from common locations
# CHROMIUM_PATH=/usr/bin/chromium
# CHROMIUM_PATH=/Applications/Google Chrome.app/Contents/MacOS/Google Chrome

# Run browser in headless mode (no GUI)
# Default: true
# BROWSER_HEADLESS=true

# Block ads and trackers for minimalist browsing
# NOTE: chromiumoxide 0.7 has limited resource blocking capabilities
# Currently implements: --disable-background-networking flag for Chromium
# URL-based pattern matching for ads/trackers is NOT supported in current version
# For advanced blocking, consider using browser extensions or proxy-level filtering
# Default: true
# BLOCK_ADS=true

# Block images (for text-only extraction)
# NOTE: chromiumoxide 0.7 does not support selective resource blocking by type
# This setting is reserved for future implementation
# For text-only extraction, images are still downloaded but not rendered
# Default: false
# BLOCK_IMAGES=false

# Navigation timeout in seconds
# Default: 30
# BROWSER_TIMEOUT_SECS=30

# Maximum number of concurrent browser tabs
# Default: 2
# BROWSER_POOL_SIZE=2

# Directory for Chromium user data (profile). Defaults to a unique temp folder per run.
# CHROMIUMOXIDE_USER_DATA_DIR=/tmp/semantic-browser/chromium-profile

# ==============================================================================
# Rate Limiting Configuration (OPTIONAL)
# ==============================================================================
# Maximum requests per minute per IP address
# Default: 60
# RATE_LIMIT_REQUESTS_PER_MINUTE=60

# Burst size for rate limiting (additional requests allowed)
# Default: 10
# RATE_LIMIT_BURST_SIZE=10

# ==============================================================================
# Monitoring and Metrics (OPTIONAL)
# ==============================================================================
# Enable Prometheus metrics endpoint
# Requires --features observability
# Default: false
# PROMETHEUS_METRICS=false

# Port for metrics endpoint (when enabled)
# Default: 9090
# METRICS_PORT=9090

# OpenTelemetry service name for distributed tracing
# Requires --features telemetry
# Default: semantic-browser
# OTEL_SERVICE_NAME=semantic-browser

# OpenTelemetry exporter endpoint (optional)
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# ==============================================================================
# External Integrations (OPTIONAL - DEPRECATED)
# ==============================================================================
# Python executable path for PyO3 integration
# DEPRECATED: Use browser-automation feature instead
# Default: python3
# PYTHON_PATH=/usr/bin/python3

# Browser-use Python library path
# DEPRECATED: Use browser-automation feature instead
# BROWSER_USE_PATH=./venv/lib/python3.x/site-packages

# ==============================================================================
# Development & Testing
# ==============================================================================
# Use development-friendly settings (NOT FOR PRODUCTION)
# DEVELOPMENT_MODE=false

# Disable authentication (NOT FOR PRODUCTION)
# DISABLE_AUTH=false

# ==============================================================================
# Production Recommendations
# ==============================================================================
# 1. Always use a strong, randomly generated JWT_SECRET
# 2. Enable HTTPS/TLS in production
# 3. Use environment-specific .env files (.env.production, .env.staging)
# 4. Never commit .env files to version control
# 5. Rotate JWT_SECRET periodically
# 6. Monitor and log all authentication events
# 7. Enable seccomp sandboxing on Linux (--features seccomp)
# 8. Use persistent KG storage for production data
# 9. Configure proper log levels (warn or error for production)
# 10. Set up rate limiting per IP in reverse proxy

# ==============================================================================
# Docker Configuration
# ==============================================================================
# When running in Docker, mount this file or pass environment variables
# docker run -v $(pwd)/.env:/app/.env semantic-browser
# or
# docker run --env-file .env semantic-browser
